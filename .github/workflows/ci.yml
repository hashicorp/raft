name: ci

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
    tags: ["*"]

permissions:
  contents: read

jobs:
  go-fmt-and-vet:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 'stable'
          cache: true
      - name: go fmt
        run: |
          files=$(go fmt ./...)
          if [ -n "$files" ]; then
            echo "The following file(s) do not conform to go fmt:"
            echo "$files"
            exit 1
          fi
      - name: go vet
        run: |
          PACKAGE_NAMES=$(go list ./... | grep -v github.com/hashicorp/raft/fuzzy)
          go vet $PACKAGE_NAMES
      - name: golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0

  go-test:
    needs: go-fmt-and-vet
    strategy:
      matrix:
        go: ['stable', 'oldstable']
        arch: ['x32', 'x64']
    runs-on: ubuntu-22.04
    env:
      INTEG_TESTS: yes
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ matrix.go }}
          architecture: ${{ matrix.arch }}
          cache: true
      # x86 specific build.
      - if: matrix.arch == 'x32'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-multilib
          go test --tags batchtest ./...
      # x86-64 specific build.
      - if: matrix.arch == 'x64'
        run: go test -race --tags batchtest ./...
  go-test-compat:
    needs: go-test
    strategy:
      matrix:
        go: ['1.20', '1.21', '1.22']
        arch: ['x32', 'x64']
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ matrix.go }}
          architecture: ${{ matrix.arch }}
          cache: true
          submodules: true
      # x86 specific build.
      - if: matrix.arch == 'x32'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-multilib
          git submodule update --init --recursive
          cd raft-compat
          go mod tidy
          go test -v -coverpkg=./... ./... -coverprofile="${{ github.workspace }}/coverage.out"
      # x86-64 specific build.
      - if: matrix.arch == 'x64'
        run: |
          git submodule update --init --recursive
          cd raft-compat
          go mod tidy
          go test -race -v -coverpkg=./... ./... -coverprofile="${{ github.workspace }}/coverage.out"
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          path: "${{ github.workspace }}/coverage.out"
          name: coverage-report-${{matrix.go}}-${{matrix.arch}}
